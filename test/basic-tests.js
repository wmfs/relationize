/* eslint-env mocha */

'use strict'

const relationize = require('./../lib/index')
const chai = require('chai')
const chaiSubset = require('chai-subset')
chai.use(chaiSubset)
const expect = chai.expect
const path = require('path')

describe('Run some basic tests', function (done) {
  it('should get required database structure for a simple schema', function (done) {
    relationize(
      {
        source: {

          schemas: [
            {
              namespace: 'relationizeTest',
              schema: {
                id: 'person',
                title: 'Person',
                description: 'Isn\'t this just a list of people?',
                primaryKey: ['employeeNo'],
                type: 'object',
                properties: {

                  employeeNo: {
                    type: 'string'
                  },

                  firstName: {
                    type: 'string',
                    description: 'Person\'s first name'
                  },
                  lastName: {
                    type: 'string'
                  },
                  age: {
                    description: 'Age in years',
                    type: 'integer',
                    minimum: 0
                  }
                },

                indexes: [
                  {
                    columns: ['firstName', 'lastName'],
                    unique: true
                  }
                ],
                required: ['firstName', 'lastName']
              }
            }
          ]
        }
      },
        function (err, dbStructure) {
          expect(err).to.equal(null)
          expect(dbStructure).to.containSubset(
            {
              'schemas': {
                'relationize_test': {
                  'comment': 'Schema auto-generated by Relationize.js!',
                  'tables': {
                    'person': {
                      'comment': 'Isn\'t this just a list of people?',
                      'pkColumnNames': [
                        'employee_no'
                      ],
                      'columns': {
                        'employee_no': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'NO'
                        },
                        'first_name': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'NO',
                          'comment': 'Person\'s first name'
                        },
                        'last_name': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'NO'
                        },
                        'age': {
                          'array': false,
                          'dataType': 'integer',
                          'numericScale': 0,
                          'isNullable': 'YES',
                          'comment': 'Age in years'
                        },
                        '_created': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was created'
                        },
                        '_created_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that created this record (if known)'
                        },
                        '_modified': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was last updated'
                        },
                        '_modified_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that last modified this record (if known)'
                        }
                      },
                      'indexes': {
                        'person_first_name_last_name_idx': {
                          'columns': [
                            'first_name',
                            'last_name'
                          ],
                          'unique': true,
                          'method': 'btree'
                        }
                      },
                      'fkConstraints': {}
                    }
                  }
                }
              },
              'expectedDbSchemaNames': [
                'relationize_test'
              ]
            }
          )

          done()
        }
      )
  }
  )

  it('should get required database structure for a nested schema', function (done) {
    relationize(
      {
        source: {

          paths: [
            {
              namespace: 'relationizeTest',
              path: path.resolve(__dirname, './fixtures/planet')
            }
          ]
        }
      },
        function (err, dbStructure) {
          expect(err).to.equal(null)
          expect(dbStructure).to.containSubset(
            {
              'schemas': {
                'relationize_test': {
                  'comment': 'Schema auto-generated by Relationize.js!',
                  'tables': {
                    'craters': {
                      'comment': 'Auto-generated via Relationize.js!',
                      'pkColumnNames': [
                        'id'
                      ],
                      'columns': {
                        'title': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'NO',
                          'comment': 'The display-label of the crater'
                        },
                        'diameter': {
                          'array': false,
                          'dataType': 'integer',
                          'numericScale': 0,
                          'isNullable': 'YES',
                          'comment': 'Diameter of the crater, in metres'
                        },
                        'moons_id': {
                          'array': false,
                          'dataType': 'uuid',
                          'isNullable': 'YES',
                          'comment': 'Auto-added foreign key for moons'
                        },
                        'id': {
                          'array': false,
                          'dataType': 'uuid',
                          'isNullable': 'NO',
                          'comment': 'Automatically added UUID-based primary key column'
                        },
                        '_created': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was created'
                        },
                        '_created_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that created this record (if known)'
                        },
                        '_modified': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was last updated'
                        },
                        '_modified_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that last modified this record (if known)'
                        }
                      },
                      'indexes': {
                        'craters_moons_id_idx': {
                          'columns': [
                            'moons_id'
                          ],
                          'unique': false,
                          'method': 'btree'
                        }
                      },
                      'fkConstraints': {
                        'craters_to_relationize_test_moons_fk': {
                          'targetTable': 'relationize_test.moons',
                          'targetColumns': [
                            'id'
                          ],
                          'sourceColumns': [
                            'moons_id'
                          ],
                          'updateAction': 'NO ACTION',
                          'deleteAction': 'CASCADE',
                          'matchType': 'SIMPLE'
                        }
                      }
                    },
                    'moons': {
                      'comment': 'Auto-generated via Relationize.js!',
                      'pkColumnNames': [
                        'id'
                      ],
                      'columns': {
                        'title': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'NO',
                          'comment': 'The display-label of the moon'
                        },
                        'discovered_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'Name of the person who discovered the moon'
                        },
                        'discovery_year': {
                          'array': false,
                          'dataType': 'integer',
                          'numericScale': 0,
                          'isNullable': 'YES',
                          'comment': 'Year the moon was discovered (e.g. 1804)'
                        },
                        'planets_name': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'Auto-added foreign key for planets'
                        },
                        'id': {
                          'array': false,
                          'dataType': 'uuid',
                          'isNullable': 'NO',
                          'comment': 'Automatically added UUID-based primary key column'
                        },
                        '_created': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was created'
                        },
                        '_created_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that created this record (if known)'
                        },
                        '_modified': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was last updated'
                        },
                        '_modified_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that last modified this record (if known)'
                        }
                      },
                      'indexes': {
                        'moons_planets_name_idx': {
                          'columns': [
                            'planets_name'
                          ],
                          'unique': false,
                          'method': 'btree'
                        }
                      },
                      'fkConstraints': {
                        'moons_to_relationize_test_planets_fk': {
                          'targetTable': 'relationize_test.planets',
                          'targetColumns': [
                            'name'
                          ],
                          'sourceColumns': [
                            'planets_name'
                          ],
                          'updateAction': 'NO ACTION',
                          'deleteAction': 'CASCADE',
                          'matchType': 'SIMPLE'
                        }
                      }
                    },
                    'planets': {
                      'comment': 'A list of planets',
                      'pkColumnNames': [
                        'name'
                      ],
                      'columns': {
                        'name': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'NO',
                          'comment': 'Unique planet name'
                        },
                        'title': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'NO',
                          'comment': 'The display-label of the planet'
                        },
                        'type': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'What type of planet is this?'
                        },
                        'diameter': {
                          'array': false,
                          'dataType': 'numeric',
                          'isNullable': 'YES',
                          'numericScale': 2,
                          'comment': 'The diameter of the planet, in metres'
                        },
                        'color': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'What color is this planet?'
                        },
                        'distance_from_sun': {
                          'array': false,
                          'dataType': 'bigint',
                          'numericScale': 0,
                          'isNullable': 'YES',
                          'comment': 'The distance from the sun, in km'
                        },
                        'url': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'Further reading available here!'
                        },
                        'other_facts': {
                          'array': false,
                          'dataType': 'jsonb',
                          'isNullable': 'YES',
                          'comment': 'Any other facts relevant to this planet'
                        },
                        'tags': {
                          'array': true,
                          'dataType': 'text',
                          'isNullable': 'YES'
                        },
                        '_created': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was created'
                        },
                        '_created_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that created this record (if known)'
                        },
                        '_modified': {
                          'array': false,
                          'dataType': 'timestamp with time zone',
                          'columnDefault': 'now()',
                          'isNullable': 'NO',
                          'comment': 'Timestamp for when this record was last updated'
                        },
                        '_modified_by': {
                          'array': false,
                          'dataType': 'text',
                          'isNullable': 'YES',
                          'comment': 'UserID that last modified this record (if known)'
                        }
                      },
                      'indexes': {},
                      'fkConstraints': {}
                    }
                  }
                }
              },
              'expectedDbSchemaNames': [
                'relationize_test'
              ]
            }
          )
          done()
        }
      )
  }
  )
})
